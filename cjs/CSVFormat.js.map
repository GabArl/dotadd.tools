{"version":3,"sources":["../build/CSVFormat.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","CSVFormat","shortName","getName","getDescription","container_type","ContainerType","CSV","test","obj","parse","filename","carry","opts","errors","ParseError","add","ADD","name","createDefaultMetadata","console","log","data","filter","arr","addMatrix","Matrix","map","num","Number","parseFloat","createDefaultOutputs","incomplete_results","push","fromADD","len","decoder","matrices","numCoeffs","equal","reduce","eq","mat","output_arr","matrix","Papa","unparse"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ADD, Matrix } from 'dotadd.js';\nimport { _static_implements, ContainerType } from './ADCFormat';\nimport * as Papa from 'papaparse';\nimport { ParseError } from './Util';\nlet CSVFormat = class CSVFormat {\n    static shortName() {\n        return \"csv\";\n    }\n    static getName() {\n        return \"CSV Files\";\n    }\n    static getDescription() {\n        return \"Basic CSV Files\";\n    }\n    static container_type() {\n        return ContainerType.CSV;\n    }\n    static test(obj) {\n        return true;\n    }\n    static parse(obj, filename, carry, opts) {\n        if (obj.errors.length)\n            throw new ParseError(filename, \"Could not parse CSV\");\n        let add = new ADD({\n            name: \"Ambisonic Decoder Description parsed from CSV File\"\n        });\n        add.createDefaultMetadata();\n        console.log(obj.data);\n        obj.data = obj.data.filter((arr) => arr[0] && arr[0].length);\n        add.addMatrix(new Matrix('unknown', obj.data.map((arr) => arr.map((num) => Number.parseFloat(num)))));\n        add.createDefaultOutputs();\n        carry.incomplete_results.push(add);\n    }\n    static fromADD(add) {\n        let len = add.decoder.matrices[0].numCoeffs();\n        let equal = add.decoder.matrices\n            .reduce((eq, mat) => mat.numCoeffs() == len, true);\n        let output_arr = [];\n        if (equal) {\n            for (let mat of add.decoder.matrices)\n                output_arr.push(...mat.matrix);\n        }\n        else\n            output_arr = add.decoder.matrices[0].matrix;\n        return Papa.unparse(output_arr);\n    }\n};\nCSVFormat = __decorate([\n    _static_implements()\n], CSVFormat);\nexport default CSVFormat;\n"],"file":"CSVFormat.js"}