{"version":3,"sources":["../build/IEMFormat.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","IEMFormat","shortName","getName","getDescription","container_type","ContainerType","JSON","test","obj","hasOwnProperty","Decoder","parse","filename","carry","add","ADD","name","Name","description","Description","author","LoudspeakerLayout","ParseError","date_str","split","trim","ampm","slice","date","Date","setHours","getHours","setDate","e","now","toISOString","messages","push","ParserMessage","ParserMessageLevels","warn","mat","Matrix","ExpectedInputNormalization","WeightsAlreadyApplied","setWeighting","Deoder","Weights","addMatrix","num_outputs","Loudspeakers","reduce","val","spk","IsImaginary","num_imags","decoder","output","summing_matrix","Array","fill","forEach","speaker","index","addOutput","OutputChannel","AEDCoord","Azimuth","Elevation","Radius","Routing","ch","Gain","valid","results","incomplete_results","fromADD","opts","iem","matrices","getNormalization","channels","coords","a","isImag","Channel","gainForChannel","matrix","prettify","use","stringify","arr"],"mappings":";;;;;;;AAMA;;AACA;;AACA;;AACA;;AATA,IAAIA,UAAU,GAAI,UAAQ,SAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HO,CAA3H;AACA,MAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EL,CAAC,GAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCO,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIH,CAAC,GAAGV,UAAU,CAACa,CAAD,CAAlB,EAAuBN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACH,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACT,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BG,CAAC,CAACT,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAUA,IAAIQ,SAAS,GAAG,MAAMA,SAAN,CAAgB;AAC5B,SAAOC,SAAP,GAAmB;AACf,WAAO,KAAP;AACH;;AACD,SAAOC,OAAP,GAAiB;AACb,WAAO,wCAAP;AACH;;AACD,SAAOC,cAAP,GAAwB;AACpB,WAAO,6FAAP;AACH;;AACD,SAAOC,cAAP,GAAwB;AACpB,WAAOC,yBAAcC,IAArB;AACH;;AACD,SAAOC,IAAP,CAAYC,GAAZ,EAAiB;AACb,WAAOA,GAAG,CAACC,cAAJ,CAAmB,MAAnB,KACAD,GAAG,CAACC,cAAJ,CAAmB,aAAnB,CADA,IAEAD,GAAG,CAACC,cAAJ,CAAmB,SAAnB,CAFA,IAGAD,GAAG,CAACE,OAAJ,CAAYD,cAAZ,CAA2B,SAA3B,CAHP;AAIH;;AACD,SAAOE,KAAP,CAAaH,GAAb,EAAkBI,QAAlB,EAA4BC,KAA5B,EAAmC;AAC/B,QAAIC,GAAG,GAAG,IAAIC,WAAJ,CAAQ;AACdC,MAAAA,IAAI,EAAER,GAAG,CAACS,IADI;AAEdC,MAAAA,WAAW,EAAEV,GAAG,CAACW,WAFH;AAGdC,MAAAA,MAAM,EAAE;AAHM,KAAR,CAAV;AAKA,QAAI,CAACZ,GAAG,CAACa,iBAAT,EACI,MAAM,IAAIC,gBAAJ,CAAeV,QAAf,EAAyB,8BAAzB,CAAN;AACJ,QAAI,CAACJ,GAAG,CAACE,OAAT,EACI,MAAM,IAAIY,gBAAJ,CAAeV,QAAf,EAAyB,0BAAzB,CAAN;AACJ,QAAIW,QAAQ,GAAGf,GAAG,CAACW,WAAJ,CAAgBK,KAAhB,CAAsB,GAAtB,EAA2BhB,GAAG,CAACW,WAAJ,CAAgBK,KAAhB,CAAsB,GAAtB,EAA2BjC,MAA3B,GAAoC,CAA/D,EAAkEkC,IAAlE,EAAf;AACA,QAAIC,IAAI,GAAGH,QAAQ,CAACI,KAAT,CAAe,CAAC,CAAhB,CAAX;AACA,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASN,QAAQ,CAACI,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAT,CAAX;AACAC,IAAAA,IAAI,CAACE,QAAL,CAAcF,IAAI,CAACG,QAAL,MAAoBL,IAAI,IAAI,IAAT,GAAiB,EAAjB,GAAsB,CAAzC,CAAd;;AACA,QAAI;AACAZ,MAAAA,GAAG,CAACkB,OAAJ,CAAYJ,IAAZ;AACH,KAFD,CAGA,OAAOK,CAAP,EAAU;AACNnB,MAAAA,GAAG,CAACkB,OAAJ,CAAY,IAAIH,IAAJ,CAASA,IAAI,CAACK,GAAL,EAAT,EAAqBC,WAArB,EAAZ;AACAtB,MAAAA,KAAK,CAACuB,QAAN,CAAeC,IAAf,CAAoB,IAAIC,wBAAJ,CAAkB,mDAAlB,EAAuEC,+BAAoBC,IAA3F,CAApB;AACH;;AACD,QAAIC,GAAG,GAAG,IAAIC,cAAJ,CAAWlC,GAAG,CAACE,OAAJ,CAAYiC,0BAAvB,EAAmDnC,GAAG,CAACE,OAAJ,CAAYgC,MAA/D,CAAV;AACA,QAAIlC,GAAG,CAACE,OAAJ,CAAYkC,qBAAhB,EACIH,GAAG,CAACI,YAAJ,CAAiBrC,GAAG,CAACsC,MAAJ,CAAWC,OAA5B;AACJjC,IAAAA,GAAG,CAACkC,SAAJ,CAAcP,GAAd;AACA,QAAIQ,WAAW,GAAGzC,GAAG,CAACa,iBAAJ,CAAsB6B,YAAtB,CACbC,MADa,CACN,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAG,CAAC,CAACC,GAAG,CAACC,WADpB,EACiC,CADjC,CAAlB;AAEA,QAAIC,SAAS,GAAG/C,GAAG,CAACa,iBAAJ,CAAsB6B,YAAtB,CACXC,MADW,CACJ,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,GAAGC,GAAG,CAACC,WADpB,EACiC,CADjC,CAAhB;AAEAxC,IAAAA,GAAG,CAAC0C,OAAJ,CAAYC,MAAZ,CAAmBC,cAAnB,GAAoC,EAApC;;AACA,SAAK,IAAI5D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,GAAG,CAACa,iBAAJ,CAAsB6B,YAAtB,CAAmC3D,MAAvD,EAA+D,EAAEO,CAAjE,EACIgB,GAAG,CAAC0C,OAAJ,CAAYC,MAAZ,CAAmBC,cAAnB,CAAkCrB,IAAlC,CAAuC,IAAIsB,KAAJ,CAAUV,WAAV,EAAuBW,IAAvB,CAA4B,CAA5B,CAAvC;;AACJpD,IAAAA,GAAG,CAACa,iBAAJ,CAAsB6B,YAAtB,CAAmCW,OAAnC,CAA2C,CAACC,OAAD,EAAUC,KAAV,KAAoBjD,GAAG,CAACkD,SAAJ,CAAc,IAAIC,qBAAJ,CAAmB,GAAEzD,GAAG,CAACa,iBAAJ,CAAsBJ,IAAK,IAAG8C,KAAM,GAAGD,OAAO,CAACR,WAAT,GAAwB,SAAxB,GAAoC,EAAG,EAAlG,EAAqG,KAArG,EAA4G,IAAIY,gBAAJ,CAAaJ,OAAO,CAACK,OAArB,EAA8BL,OAAO,CAACM,SAAtC,EAAiDN,OAAO,CAACO,MAAzD,CAA5G,CAAd,CAA/D;AACA7D,IAAAA,GAAG,CAACE,OAAJ,CAAY4D,OAAZ,CAAoBT,OAApB,CAA4B,CAACU,EAAD,EAAKR,KAAL,KAAe;AACvCjD,MAAAA,GAAG,CAAC0C,OAAJ,CAAYC,MAAZ,CAAmBC,cAAnB,CAAkCa,EAAE,GAAG,CAAvC,EAA0CR,KAA1C,IACMvD,GAAG,CAACa,iBAAJ,CAAsB6B,YAAtB,CAAmCqB,EAAE,GAAG,CAAxC,EAA2CC,IADjD;AAEH,KAHD;AAIA,QAAI1D,GAAG,CAAC2D,KAAJ,EAAJ,EACI5D,KAAK,CAAC6D,OAAN,CAAcrC,IAAd,CAAmBvB,GAAnB,EADJ,KAGID,KAAK,CAAC8D,kBAAN,CAAyBtC,IAAzB,CAA8BvB,GAA9B;AACP;;AACD,SAAO8D,OAAP,CAAe9D,GAAf,EAAoB+D,IAApB,EAA0B;AACtB,QAAIC,GAAG,GAAG;AACN7D,MAAAA,IAAI,EAAEH,GAAG,CAACE,IADJ;AAENG,MAAAA,WAAW,EAAEL,GAAG,CAACI,WAFX;AAGNR,MAAAA,OAAO,EAAE;AACLO,QAAAA,IAAI,EAAEH,GAAG,CAACE,IADL;AAELG,QAAAA,WAAW,EAAEL,GAAG,CAACI,WAFZ;AAGLyB,QAAAA,0BAA0B,EAAE7B,GAAG,CAAC0C,OAAJ,CAAYuB,QAAZ,CAAqB,CAArB,EAAwBC,gBAAxB,EAHvB;AAILjC,QAAAA,OAAO,EAAE,OAJJ;AAKLH,QAAAA,qBAAqB,EAAE,KALlB;AAMLF,QAAAA,MAAM,EAAE,EANH;AAOL4B,QAAAA,OAAO,EAAE;AAPJ,OAHH;AAYNjD,MAAAA,iBAAiB,EAAE;AACfJ,QAAAA,IAAI,EAAE,EADS;AAEfiC,QAAAA,YAAY,EAAE;AAFC;AAZb,KAAV;AAiBApC,IAAAA,GAAG,CAAC0C,OAAJ,CAAYC,MAAZ,CAAmBwB,QAAnB,CAA4BpB,OAA5B,CAAoC,CAACU,EAAD,EAAKzE,CAAL,KAAW;AAC3C,UAAIuD,GAAG,GAAG;AACNc,QAAAA,OAAO,EAAEI,EAAE,CAACW,MAAH,CAAUC,CAAV,IAAe,CADlB;AAENf,QAAAA,SAAS,EAAEG,EAAE,CAACW,MAAH,CAAUjD,CAAV,IAAe,CAFpB;AAGNoC,QAAAA,MAAM,EAAEE,EAAE,CAACW,MAAH,CAAUvF,CAAV,IAAe,CAHjB;AAIN2D,QAAAA,WAAW,EAAE8B,MAAM,CAACtE,GAAD,EAAMhB,CAAN,CAJb;AAKNuF,QAAAA,OAAO,EAAEvF,CAAC,GAAG,CALP;AAMN0E,QAAAA,IAAI,EAAEc,cAAc,CAACxE,GAAD,EAAMhB,CAAN;AANd,OAAV;AAQA,UAAI,CAACsF,MAAM,CAACtE,GAAD,EAAMhB,CAAN,CAAX,EACIgF,GAAG,CAACpE,OAAJ,CAAY4D,OAAZ,CAAoBjC,IAApB,CAAyBvC,CAAC,GAAG,CAA7B;AACJgF,MAAAA,GAAG,CAACzD,iBAAJ,CAAsB6B,YAAtB,CAAmCb,IAAnC,CAAwCgB,GAAxC;AACH,KAZD;AAaAyB,IAAAA,GAAG,CAACpE,OAAJ,CAAYgC,MAAZ,GAAqB5B,GAAG,CAAC0C,OAAJ,CAAYuB,QAAZ,CAAqB,CAArB,EAAwBQ,MAA7C;AACA,QAAIC,QAAQ,GAAGX,IAAI,CAACY,GAAL,CAAS,UAAT,CAAf;AACA,QAAID,QAAJ,EACI,OAAOlF,IAAI,CAACoF,SAAL,CAAeZ,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAAP,CADJ,KAGI,OAAOxE,IAAI,CAACoF,SAAL,CAAeZ,GAAf,CAAP;AACP;;AAlG2B,CAAhC;AAoGA9E,SAAS,GAAGhB,UAAU,CAAC,CACnB,oCADmB,CAAD,EAEnBgB,SAFmB,CAAtB;eAGeA,S;;;AACf,SAASoF,MAAT,CAAgBtE,GAAhB,EAAqBiD,KAArB,EAA4B;AACxB,SAAOjD,GAAG,CAAC0C,OAAJ,CAAYC,MAAZ,CAAmBC,cAAnB,CAAkCK,KAAlC,EACFZ,MADE,CACK,CAACC,GAAD,EAAMuC,GAAN,KAAcvC,GAAG,GAAGuC,GADzB,EAC8B,CAD9B,KACoC,EAD3C;AAEH;;AACD,SAASL,cAAT,CAAwBxE,GAAxB,EAA6BiD,KAA7B,EAAoC;AAChC,SAAOjD,GAAG,CAAC0C,OAAJ,CAAYC,MAAZ,CAAmBC,cAAnB,CAAkCK,KAAlC,EACFZ,MADE,CACK,CAACC,GAAD,EAAMuC,GAAN,KAAcvC,GAAG,GAAGuC,GADzB,EAC8B,CAD9B,CAAP;AAEH","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { _static_implements, ContainerType } from './ADCFormat';\nimport { ParserMessage, ParserMessageLevels } from './Converter';\nimport { ADD, Matrix, OutputChannel, AEDCoord } from 'dotadd.js';\nimport { ParseError } from './Util';\nlet IEMFormat = class IEMFormat {\n    static shortName() {\n        return \"iem\";\n    }\n    static getName() {\n        return \"IEM AllRad Decoder Configuration Files\";\n    }\n    static getDescription() {\n        return \"Exported and imported by the IEM Allrad decoder. Can also be read by the IEM Simple Decoder\";\n    }\n    static container_type() {\n        return ContainerType.JSON;\n    }\n    static test(obj) {\n        return obj.hasOwnProperty('Name')\n            && obj.hasOwnProperty(\"Description\")\n            && obj.hasOwnProperty(\"Decoder\")\n            && obj.Decoder.hasOwnProperty(\"Weights\");\n    }\n    static parse(obj, filename, carry) {\n        let add = new ADD({\n            name: obj.Name,\n            description: obj.Description,\n            author: \"IEM Graz\",\n        });\n        if (!obj.LoudspeakerLayout)\n            throw new ParseError(filename, \"No Loudspeaker Layout found.\");\n        if (!obj.Decoder)\n            throw new ParseError(filename, \"No Decoder found in File\");\n        let date_str = obj.Description.split(\".\")[obj.Description.split(\".\").length - 1].trim();\n        let ampm = date_str.slice(-2);\n        let date = new Date(date_str.slice(0, -2));\n        date.setHours(date.getHours() + ((ampm == 'pm') ? 12 : 0));\n        try {\n            add.setDate(date);\n        }\n        catch (e) {\n            add.setDate(new Date(Date.now()).toISOString());\n            carry.messages.push(new ParserMessage(\"Could not read Date value from description string\", ParserMessageLevels.warn));\n        }\n        let mat = new Matrix(obj.Decoder.ExpectedInputNormalization, obj.Decoder.Matrix);\n        if (obj.Decoder.WeightsAlreadyApplied)\n            mat.setWeighting(obj.Deoder.Weights);\n        add.addMatrix(mat);\n        let num_outputs = obj.LoudspeakerLayout.Loudspeakers\n            .reduce((val, spk) => val + +!spk.IsImaginary, 0);\n        let num_imags = obj.LoudspeakerLayout.Loudspeakers\n            .reduce((val, spk) => val + spk.IsImaginary, 0);\n        add.decoder.output.summing_matrix = [];\n        for (let i = 0; i < obj.LoudspeakerLayout.Loudspeakers.length; ++i)\n            add.decoder.output.summing_matrix.push(new Array(num_outputs).fill(0));\n        obj.LoudspeakerLayout.Loudspeakers.forEach((speaker, index) => add.addOutput(new OutputChannel(`${obj.LoudspeakerLayout.Name} ${index}${(speaker.IsImaginary) ? \" [IMAG]\" : \"\"}`, 'spk', new AEDCoord(speaker.Azimuth, speaker.Elevation, speaker.Radius))));\n        obj.Decoder.Routing.forEach((ch, index) => {\n            add.decoder.output.summing_matrix[ch - 1][index]\n                = obj.LoudspeakerLayout.Loudspeakers[ch - 1].Gain;\n        });\n        if (add.valid())\n            carry.results.push(add);\n        else\n            carry.incomplete_results.push(add);\n    }\n    static fromADD(add, opts) {\n        let iem = {\n            Name: add.name,\n            Description: add.description,\n            Decoder: {\n                Name: add.name,\n                Description: add.description,\n                ExpectedInputNormalization: add.decoder.matrices[0].getNormalization(),\n                Weights: \"maxrE\",\n                WeightsAlreadyApplied: false,\n                Matrix: [],\n                Routing: []\n            },\n            LoudspeakerLayout: {\n                Name: \"\",\n                Loudspeakers: []\n            }\n        };\n        add.decoder.output.channels.forEach((ch, i) => {\n            let spk = {\n                Azimuth: ch.coords.a || 0,\n                Elevation: ch.coords.e || 0,\n                Radius: ch.coords.d || 1,\n                IsImaginary: isImag(add, i),\n                Channel: i + 1,\n                Gain: gainForChannel(add, i)\n            };\n            if (!isImag(add, i))\n                iem.Decoder.Routing.push(i + 1);\n            iem.LoudspeakerLayout.Loudspeakers.push(spk);\n        });\n        iem.Decoder.Matrix = add.decoder.matrices[0].matrix;\n        let prettify = opts.use('prettify');\n        if (prettify)\n            return JSON.stringify(iem, null, 4);\n        else\n            return JSON.stringify(iem);\n    }\n};\nIEMFormat = __decorate([\n    _static_implements()\n], IEMFormat);\nexport default IEMFormat;\nfunction isImag(add, index) {\n    return add.decoder.output.summing_matrix[index]\n        .reduce((val, arr) => val + arr, 0) == 0.;\n}\nfunction gainForChannel(add, index) {\n    return add.decoder.output.summing_matrix[index]\n        .reduce((val, arr) => val + arr, 0);\n}\n"],"file":"IEMFormat.js"}