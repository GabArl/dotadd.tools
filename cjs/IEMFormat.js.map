{"version":3,"sources":["../build/IEMFormat.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","IEMFormat","shortName","getName","getDescription","container_type","ContainerType","JSON","test","obj","hasOwnProperty","Decoder","parse","filename","carry","add","ADD","name","Name","description","Description","author","date_str","split","trim","ampm","slice","date","Date","setHours","getHours","setDate","norm","ExpectedInputNormalization","addMatrix","Matrix","repair","valid","results","push","incomplete_results","fromADD"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { _static_implements, ContainerType } from './ADCFormat';\nimport { ADD, Matrix } from 'dotadd.js';\nlet IEMFormat = class IEMFormat {\n    static shortName() {\n        return \"iem\";\n    }\n    static getName() {\n        return \"IEM AllRad Decoder Configuration Files\";\n    }\n    static getDescription() {\n        return \"Exported and imported by the IEM Allrad decoder. Can also be read by the IEM Simple Decoder\";\n    }\n    static container_type() {\n        return ContainerType.JSON;\n    }\n    static test(obj) {\n        return obj.hasOwnProperty('Name')\n            && obj.hasOwnProperty(\"Description\")\n            && obj.hasOwnProperty(\"Decoder\")\n            && obj.Decoder.hasOwnProperty(\"Weights\");\n    }\n    static parse(obj, filename, carry) {\n        let add = new ADD({\n            name: obj.Name,\n            description: obj.Description,\n            author: \"IEM Graz\",\n        });\n        let date_str = obj.Description.split(\".\")[obj.Description.split(\".\").length - 1].trim();\n        let ampm = date_str.slice(-2);\n        let date = new Date(date_str.slice(0, -2));\n        date.setHours(date.getHours() + ((ampm == 'pm') ? 12 : 0));\n        add.setDate(date);\n        let norm = obj.Decoder.ExpectedInputNormalization;\n        add.addMatrix(new Matrix(0, norm, obj.Decoder.Matrix));\n        add.repair();\n        if (add.valid())\n            carry.results.push(add);\n        else\n            carry.incomplete_results.push(add);\n    }\n    static fromADD(add) {\n        return \"\";\n    }\n};\nIEMFormat = __decorate([\n    _static_implements()\n], IEMFormat);\nexport default IEMFormat;\n"],"file":"IEMFormat.js"}