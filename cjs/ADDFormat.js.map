{"version":3,"sources":["../build/ADDFormat.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","ADDFormat","shortName","getName","getDescription","container_type","ContainerType","JSON","test","obj","hasOwnProperty","parse","filename","carry","opts","add","ADD","valid","results","push","incomplete_results","fromADD","export","serialize"],"mappings":";;;;;;;AAMA;;AACA;;AAPA,IAAIA,UAAU,GAAI,UAAQ,SAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HO,CAA3H;AACA,MAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EL,CAAC,GAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCO,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIH,CAAC,GAAGV,UAAU,CAACa,CAAD,CAAlB,EAAuBN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACH,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACT,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BG,CAAC,CAACT,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAQA,IAAIQ,SAAS,GAAG,MAAMA,SAAN,CAAgB;AAC5B,SAAOC,SAAP,GAAmB;AACf,WAAO,KAAP;AACH;;AACD,SAAOC,OAAP,GAAiB;AACb,WAAO,+BAAP;AACH;;AACD,SAAOC,cAAP,GAAwB;AACpB,WAAO,sDAAP;AACH;;AACD,SAAOC,cAAP,GAAwB;AACpB,WAAOC,yBAAcC,IAArB;AACH;;AACD,SAAOC,IAAP,CAAYC,GAAZ,EAAiB;AACb,WAAOA,GAAG,CAACC,cAAJ,CAAmB,MAAnB,KACAD,GAAG,CAACC,cAAJ,CAAmB,SAAnB,CADA,IAEAD,GAAG,CAACC,cAAJ,CAAmB,UAAnB,CAFP;AAGH;;AACD,SAAOC,KAAP,CAAaF,GAAb,EAAkBG,QAAlB,EAA4BC,KAA5B,EAAmCC,IAAnC,EAAyC;AACrC,QAAIC,GAAG,GAAG,IAAIC,WAAJ,CAAQP,GAAR,CAAV;AACA,QAAIM,GAAG,CAACE,KAAJ,EAAJ,EACIJ,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmBJ,GAAnB,EADJ,KAGIF,KAAK,CAACO,kBAAN,CAAyBD,IAAzB,CAA8BJ,GAA9B;AACP;;AACD,SAAOM,OAAP,CAAeN,GAAf,EAAoB;AAChB,WAAOA,GAAG,CAACO,MAAJ,GAAaC,SAAb,EAAP;AACH;;AA3B2B,CAAhC;AA6BAtB,SAAS,GAAGhB,UAAU,CAAC,CACnB,oCADmB,CAAD,EAEnBgB,SAFmB,CAAtB;eAGeA,S","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ContainerType, _static_implements } from \"./ADCFormat\";\nimport { ADD } from 'dotadd.js';\nlet ADDFormat = class ADDFormat {\n    static shortName() {\n        return \"add\";\n    }\n    static getName() {\n        return \"Ambisonic Decoder Description\";\n    }\n    static getDescription() {\n        return \"Universal file format to describe Ambisonic decoders\";\n    }\n    static container_type() {\n        return ContainerType.JSON;\n    }\n    static test(obj) {\n        return obj.hasOwnProperty(\"name\")\n            && obj.hasOwnProperty(\"decoder\")\n            && obj.hasOwnProperty(\"revision\");\n    }\n    static parse(obj, filename, carry, opts) {\n        let add = new ADD(obj);\n        if (add.valid())\n            carry.results.push(add);\n        else\n            carry.incomplete_results.push(add);\n    }\n    static fromADD(add) {\n        return add.export().serialize();\n    }\n};\nADDFormat = __decorate([\n    _static_implements()\n], ADDFormat);\nexport default ADDFormat;\n"],"file":"ADDFormat.js"}