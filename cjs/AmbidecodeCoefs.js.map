{"version":3,"sources":["../build/AmbidecodeCoefs.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","AmbidecodeCoefs","getName","getDescription","container_type","ContainerType","XML","test","obj","hasOwnProperty","parse","filename","carry","opts","incomplete","add","ADD","ambc","incomplete_results","shift","speaker","coef","Error","decoder","matrices","addMatrix","Matrix","matrix","map","spk","cf","push","results","console","log","JSON","stringify"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ContainerType, _static_implements } from \"./ADCFormat\";\nimport { ADD, Matrix } from 'dotadd.js';\nlet AmbidecodeCoefs = class AmbidecodeCoefs {\n    static getName() {\n        return \"Ambidecode XML Configuration Files\";\n    }\n    static getDescription() {\n        return \"Exported and Imported by the ICST Ambisonics Externals for Max/MSP.\";\n    }\n    static container_type() {\n        return ContainerType.XML;\n    }\n    static test(obj) {\n        return obj.hasOwnProperty(\"ambidecode-coefs\");\n    }\n    static parse(obj, filename, carry, opts) {\n        let incomplete = true;\n        let add = new ADD();\n        let ambc = obj['ambidecode-coefs'];\n        if (carry.incomplete_results.length) {\n            add = carry.incomplete_results.shift();\n            incomplete = false;\n        }\n        if (!ambc.speaker[0].coef[0].hasOwnProperty(\"@_ACN\"))\n            throw new Error(\"Unsupported channel ordering in \" + filename);\n        if (!add.decoder.matrices.length)\n            add.addMatrix(new Matrix(0, 'unknown', []));\n        else\n            add.decoder.matrices[0].matrix = [];\n        add.decoder.matrices[0].matrix = ambc.speaker.map((spk) => spk.coef.map((cf) => cf['#text']));\n        if (incomplete)\n            carry.incomplete_results.push(add);\n        else\n            carry.results.push(add);\n        console.log(JSON.stringify(add, null, 4));\n    }\n};\nAmbidecodeCoefs = __decorate([\n    _static_implements()\n], AmbidecodeCoefs);\nexport default AmbidecodeCoefs;\n"],"file":"AmbidecodeCoefs.js"}